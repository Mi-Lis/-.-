// Ch12_2_13.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <vector>
#include <iterator>
#include<algorithm>
using namespace std;
bool proverka(int i, size_t k)
{
    if (i % k == 0)
        return true;
    return false;
}
int main()
{
    int j;
    int i = -1;
    size_t n; cout << "Vvedite kol-vo elementov n= "; cin >> n;
    int k; cout << "Vvedite shag k=";              cin >> k;
    int kolvo_el = n / k; //Количество необходимых элементов(иначе программа выдают ошибку о невозможности поиска конца вектора)
    vector<int> a(n);
    vector<int>::iterator iter = a.begin();
    for (iter,j = 0; iter < a.end(); iter++,j++) 
    {

        cout << "a[" << j << "] = "; cin >> *iter;
    }
    iter = a.begin();
    for (int i = k-1; i < n+kolvo_el; i+=k+1)//подстановка нужных элементов
    {
        iter = a.begin() + i;
        a.insert(iter, 0);
    }
    iter = a.begin();
    for (iter; iter < a.end(); iter++)
    {
        cout<< *iter;
    }
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
